/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_ANALOGVIEWBASE_HPP
#define SCREEN_ANALOGVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_analog_screen/Screen_analogPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Screen_analogViewBase : public touchgfx::View<Screen_analogPresenter>
{
public:
    Screen_analogViewBase();
    virtual ~Screen_analogViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::Button button_back;
    touchgfx::Button button_next;
    touchgfx::Image image1;
    touchgfx::Image image2;
    touchgfx::Image image4;
    touchgfx::Image image5;
    touchgfx::TextAreaWithOneWildcard textArea_bat;
    touchgfx::TextAreaWithOneWildcard textArea_rpm;
    touchgfx::TextAreaWithOneWildcard textArea_fuel;
    touchgfx::TextAreaWithOneWildcard textArea_oil;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea2_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_BAT_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textArea_batBuffer[TEXTAREA_BAT_SIZE];
    static const uint16_t TEXTAREA_RPM_SIZE = 5;
    touchgfx::Unicode::UnicodeChar textArea_rpmBuffer[TEXTAREA_RPM_SIZE];
    static const uint16_t TEXTAREA_FUEL_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textArea_fuelBuffer[TEXTAREA_FUEL_SIZE];
    static const uint16_t TEXTAREA_OIL_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textArea_oilBuffer[TEXTAREA_OIL_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen_analogViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN_ANALOGVIEWBASE_HPP
